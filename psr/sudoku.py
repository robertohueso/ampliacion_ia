## AIA
## Problemas de Satisfacción de Restricciones
## Dpto. de C. de la Computación e I.A. (Univ. de Sevilla)
## ===================================================================

## ===================================================================
## Representación del problema de resolver sudokus
## ===================================================================

##   La función psr_sudoku, dado un diccionario que a las coordenadas
## de las casillas inicialmente rellenas en un sudoku le asigna el
## valor que aparece en las mismas, devuelve la instancia de la clase
## PSR correspondiente.


    
def psr_sudoku(puestas):

    def todas_distintas(vars,restrs):
        for i in range(len(vars)-1):
            for j in range(i+1,len(vars)):
                restrs[(vars[i],vars[j])] = lambda u,v: u!= v

    doms = dict()
    for i in range(1, 10):
        for j in range(1, 10):
            if (i,j) in puestas:
                doms[(i,j)] = [puestas[(i,j)]]
            else:
                doms[(i,j)] = list(range(1,10))

    restrs = dict()
    for i in range(1,10):
        todas_distintas([(i,j) for j in range(1,10)],restrs)
        todas_distintas([(j,i) for j in range(1,10)],restrs)
    for i in range(1,10,3):
        for j in range(1,10,3):
            todas_distintas([(i+k,j+l)
                             for k in range(3) for l in range(3)],restrs)

    return PSR(doms,restrs)

## Para visualizar las soluciones utilizaremos la siguiente función:

def dibuja_sudoku(asig):

    def cadena_fila(i,asig):
        cadena = "|"
        for j in range(1,10):
            if j == 4 or j == 7: cadena += "|"
            cadena += (str(asig[(i,j)])+"|")
        return cadena

    print("+"+("-"*19)+"+")
    for i in range(1,9):
        if i == 4 or i == 7: print("|"+("-"*19)+"|")
        print(cadena_fila(i,asig))
        print("|"+("-"*19)+"|")
    print(cadena_fila(9,asig))
    print("+"+("-"*19)+"+")

## Sudoku 1

##                 +-------------------+
##                 | |7| ||8|5| || | | |
##                 |-------------------|
##                 | |3| || | | ||5| |7|
##                 |-------------------|
##                 | | | || | |7|| |6| |
##                 |-------------------|
##                 |-------------------|
##                 |4| | || | | || | |1|
##                 |-------------------|
##                 |2|9|3|| | | || | |4|
##                 |-------------------|
##                 | | | ||7| |6|| |9| |
##                 |-------------------|
##                 |-------------------|
##                 | | |2||1|3|9|| | | |
##                 |-------------------|
##                 | | | || | | ||1| | |
##                 |-------------------|
##                 |1| | ||2| | || | | |
##                 +-------------------+

sudoku1 = {(1,2):7, (1,4):8, (1,5):5, (2,2):3, (2,7):5, (2,9):7,
           (3,6):7, (3,8):6, (4,1):4, (4,9):1, (5,1):2, (5,2):9,
           (5,3):3, (5,9):4, (6,4):7, (6,6):6, (6,8):9, (7,3):2,
           (7,4):1, (7,5):3, (7,6):9, (8,7):1, (9,1):1, (9,4):2}

## >>> psr_s1 = psr_sudoku(sudoku1)
## >>> sum(len(psr_s1.dominios[x]) for x in psr_s1.variables)
## 537
## >>> red1 = AC3(psr_s1, psr_s1.dominios)
## >>> sum(len(red1[x]) for x in psr_s1.variables)
## 240
## 

## >>> dibuja_sudoku(psr_backtracking_AC3_MRV(psr_s1))
## +-------------------+
## |6|7|1||8|5|3||9|4|2|
## |-------------------|
## |9|3|8||6|2|4||5|1|7|
## |-------------------|
## |5|2|4||9|1|7||3|6|8|
## |-------------------|
## |-------------------|
## |4|6|7||3|9|2||8|5|1|
## |-------------------|
## |2|9|3||5|8|1||6|7|4|
## |-------------------|
## |8|1|5||7|4|6||2|9|3|
## |-------------------|
## |-------------------|
## |7|5|2||1|3|9||4|8|6|
## |-------------------|
## |3|8|6||4|7|5||1|2|9|
## |-------------------|
## |1|4|9||2|6|8||7|3|5|
## +-------------------+

## >>> psr_s1 = psr_sudoku(sudoku1)
## >>> sudoku_azar1 = crea_asignacion_inicial(psr_s1)
## >>> dibuja_sudoku(sudoku_azar1)
## +-------------------+
## |8|7|9||8|5|4||7|1|5|
## |-------------------|
## |5|3|7||1|7|9||5|7|7|
## |-------------------|
## |9|7|1||3|9|7||8|6|6|
## |-------------------|
## |-------------------|
## |4|7|2||3|5|6||1|9|1|
## |-------------------|
## |2|9|3||5|2|8||1|6|4|
## |-------------------|
## |7|7|5||7|4|6||8|9|8|
## |-------------------|
## |-------------------|
## |1|7|2||1|3|9||6|5|6|
## |-------------------|
## |7|8|4||8|6|3||1|5|3|
## |-------------------|
## |1|8|2||2|3|2||5|5|5|
## +-------------------+
## >>> restricciones_incumplidas(psr_s1, sudoku_azar1)
## {(4, 7): 3, (1, 3): 1, (4, 8): 1, (5, 6): 0, (2, 8): 4, (9, 8): 4,
##  (5, 4): 1, (2, 1): 1, (8, 9): 1, (6, 2): 6, (1, 6): 0, (3, 7): 1,
##  (2, 5): 4, (8, 5): 0, (5, 8): 1, (3, 1): 2, (6, 7): 2, (5, 5): 1,
##  (8, 1): 2, (4, 3): 3, (4, 4): 1, (6, 3): 0, (7, 2): 5, (8, 6): 3,
##  (3, 5): 2, (1, 1): 1, (9, 7): 5, (3, 2): 6, (2, 6): 2, (8, 2): 2,
##  (7, 1): 2, (4, 5): 2, (9, 3): 4, (7, 7): 1, (3, 9): 2, (2, 3): 5,
##  (1, 9): 3, (4, 2): 5, (9, 6): 2, (6, 5): 0, (3, 3): 0, (8, 3): 0,
##  (4, 6): 1, (9, 2): 1, (7, 8): 4, (6, 1): 4, (5, 7): 3, (9, 9): 5,
##  (1, 8): 0, (8, 8): 4, (7, 9): 2, (1, 7): 3, (9, 5): 2, (6, 9): 1,
##  (3, 4): 1, (2, 4): 1, (8, 4): 2} 
## >>> selecciona_variable(psr_s1, sudoku_azar1, None)
## (3, 2)
### >>> nuevo_valor(psr_s1, sudoku_azar1, (3, 2))
### 4
## >>> sudoku_azar1[(3, 2)] = 4
## >>> restricciones_incumplidas(psr_s1, sudoku_azar1)
## {(4, 7): 3, (1, 3): 1, (4, 8): 1, (5, 6): 0, (2, 8): 4, (9, 8): 4,
##  (5, 4): 1, (2, 1): 1, (8, 9): 1, (6, 2): 5, (1, 6): 0, (3, 7): 1,
##  (2, 5): 4, (8, 5): 0, (5, 8): 1, (3, 1): 2, (6, 7): 2, (5, 5): 1,
##  (8, 1): 2, (4, 3): 3, (4, 4): 1, (6, 3): 0, (7, 2): 4, (8, 6): 3,
##  (3, 5): 2, (1, 1): 1, (9, 7): 5, (3, 2): 0, (2, 6): 2, (8, 2): 2,
##  (7, 1): 2, (4, 5): 2, (9, 3): 4, (7, 7): 1, (3, 9): 2, (2, 3): 4,
##  (1, 9): 3, (4, 2): 4, (9, 6): 2, (6, 5): 0, (3, 3): 0, (8, 3): 0,
##  (4, 6): 1, (9, 2): 1, (7, 8): 4, (6, 1): 4, (5, 7): 3, (9, 9): 5,
##  (1, 8): 0, (8, 8): 4, (7, 9): 2, (1, 7): 3, (9, 5): 2, (6, 9): 1,
##  (3, 4): 1, (2, 4): 1, (8, 4): 2} 


## Sudoku 2 (wikipedia)

##                 +-------------------+
##                 |5|3| || |7| || | | |
##                 |-------------------|
##                 |6| | ||1|9|5|| | | |
##                 |-------------------|
##                 | |9|8|| | | || |6| |
##                 |-------------------|
##                 |-------------------|
##                 |8| | || |6| || | |3|
##                 |-------------------|
##                 |4| | ||8| |3|| | |1|
##                 |-------------------|
##                 |7| | || |2| || | |6|
##                 |-------------------|
##                 |-------------------|
##                 | |6| || | | ||2|8| |
##                 |-------------------|
##                 | | | ||4|1|9|| | |5|
##                 |-------------------|
##                 | | | || |8| || |7|9|
##                 +-------------------+

sudoku2 = {(1,1):5, (1,2):3, (1,5):7, (2,1):6, (2,4):1, (2,5):9,
           (2,6):5, (3,2):9, (3,3):8, (3,8):6, (4,1):8, (4,5):6,
           (4,9):3, (5,1):4, (5,4):8, (5,6):3, (5,9):1, (6,1):7,
           (6,5):2, (6,9):6, (7,2):6, (7,7):2, (7,8):8, (8,4):4,
           (8,5):1, (8,6):9, (8,9):5, (9,5):8, (9,8):7, (9,9):9}

## >>> psr_s2 = psr_sudoku(sudoku2)
## >>> sum(len(psr_s2.dominios[x]) for x in psr_s2.variables)
## 489
## >>> red2 = AC3(psr_s2, psr_s2.dominios)
## >>> sum(len(red2[x]) for x in psr_s2.variables)
## 81
    
## >>> dibuja_sudoku(psr_backtracking_AC3_MRV(psr_s2))
## +-------------------+
## |5|3|4||6|7|8||9|1|2|
## |-------------------|
## |6|7|2||1|9|5||3|4|8|
## |-------------------|
## |1|9|8||3|4|2||5|6|7|
## |-------------------|
## |-------------------|
## |8|5|9||7|6|1||4|2|3|
## |-------------------|
## |4|2|6||8|5|3||7|9|1|
## |-------------------|
## |7|1|3||9|2|4||8|5|6|
## |-------------------|
## |-------------------|
## |9|6|1||5|3|7||2|8|4|
## |-------------------|
## |2|8|7||4|1|9||6|3|5|
## |-------------------|
## |3|4|5||2|8|6||1|7|9|
## +-------------------+

## >>> psr_s2 = psr_sudoku(sudoku2)
## >>> sudoku_azar2 = crea_asignacion_inicial(psr_s2)
## >>> dibuja_sudoku(sudoku_azar2)
## +-------------------+
## |5|3|8||1|7|7||4|2|3|
## |-------------------|
## |6|2|7||1|9|5||1|1|6|
## |-------------------|
## |3|9|8||5|9|4||5|6|7|
## |-------------------|
## |-------------------|
## |8|7|2||5|6|9||2|2|3|
## |-------------------|
## |4|3|1||8|3|3||5|2|1|
## |-------------------|
## |7|5|8||2|2|3||6|1|6|
## |-------------------|
## |-------------------|
## |7|6|8||3|3|4||2|8|9|
## |-------------------|
## |3|7|5||4|1|9||7|9|5|
## |-------------------|
## |1|9|9||8|8|7||5|7|9|
## +-------------------+
## >>> restricciones_incumplidas(psr_s2, sudoku_azar2)
## {(7, 3): 4, (4, 7): 4, (1, 3): 3, (9, 1): 0, (6, 6): 2, (2, 8): 3,
##  (6, 2): 0, (1, 6): 2, (9, 4): 2, (3, 7): 3, (5, 8): 3, (6, 7): 1,
##  (5, 5): 4, (2, 9): 3, (8, 1): 1, (7, 6): 2, (4, 8): 4, (4, 4): 1,
##  (6, 3): 4, (8, 8): 3, (3, 6): 1, (5, 7): 2, (3, 5): 2, (9, 7): 3,
##  (6, 4): 1, (4, 6): 1, (8, 2): 3, (7, 1): 2, (9, 3): 2, (1, 4): 1,
##  (7, 5): 2, (2, 3): 0, (1, 9): 2, (8, 7): 2, (4, 2): 2, (9, 6): 2,
##  (5, 3): 1, (2, 7): 2, (8, 3): 1, (6, 8): 2, (9, 2): 3, (5, 2): 3,
##  (3, 1): 2, (2, 2): 0, (7, 4): 1, (1, 8): 2, (3, 9): 0, (7, 9): 2,
##  (1, 7): 0, (4, 3): 2, (3, 4): 3} 
## >>> selecciona_variable(psr_s2, sudoku_azar2, None)
## (6, 3)
## >>> nuevo_valor(psr_s2, sudoku_azar2, (6, 3))
## 9
## >>> sudoku_azar2[(6, 3)] = 9
## >>> restricciones_incumplidas(psr_s2, sudoku_azar2)
## {(7, 3): 3, (4, 7): 4, (1, 3): 3, (9, 1): 0, (6, 6): 2, (2, 8): 3,
##  (6, 2): 0, (1, 6): 2, (9, 4): 2, (3, 7): 3, (5, 8): 3, (6, 7): 1,
##  (5, 5): 4, (2, 9): 3, (8, 1): 1, (7, 6): 2, (4, 8): 4, (4, 4): 1,
##  (6, 3): 1, (8, 8): 3, (3, 6): 1, (5, 7): 2, (3, 5): 1, (9, 7): 3,
##  (6, 4): 1, (4, 6): 1, (8, 2): 3, (7, 1): 2, (9, 3): 3, (1, 4): 1,
##  (7, 5): 2, (2, 3): 0, (1, 9): 2, (8, 7): 2, (4, 2): 2, (9, 6): 2,
##  (5, 3): 1, (2, 7): 2, (8, 3): 1, (6, 8): 2, (9, 2): 2, (5, 2): 3,
##  (3, 1): 2, (2, 2): 0, (7, 4): 1, (1, 8): 2, (3, 9): 0, (7, 9): 2,
##  (1, 7): 0, (4, 3): 2, (3, 4): 3} 

## >>> psr_s2 = psr_sudoku(sudoku2)
## >>> dibuja_sudoku(reparacion_heuristica(psr_s2, 30000)[0])
## +-------------------+
## |5|3|4||6|7|8||9|1|2|
## |-------------------|
## |6|7|2||1|9|5||3|4|8|
## |-------------------|
## |1|9|8||3|4|2||5|6|7|
## |-------------------|
## |-------------------|
## |8|5|9||7|6|1||4|2|3|
## |-------------------|
## |4|2|6||8|5|3||7|9|1|
## |-------------------|
## |7|1|3||9|2|4||8|5|6|
## |-------------------|
## |-------------------|
## |9|6|1||5|3|7||2|8|4|
## |-------------------|
## |2|8|7||4|1|9||6|3|5|
## |-------------------|
## |3|4|5||2|8|6||1|7|9|
## +-------------------+

## Sudoku 3

##                 +-------------------+
##                 |9|5| || | | ||6|7| |
##                 |-------------------|
##                 | | | || | |7||3|1| |
##                 |-------------------|
##                 |8| | ||5|6|1|| | | |
##                 |-------------------|
##                 |-------------------|
##                 |2|3| || | | || | | |
##                 |-------------------|
##                 | | |9|| | | ||1| | |
##                 |-------------------|
##                 | | | || | | || |3|7|
##                 |-------------------|
##                 |-------------------|
##                 | | | ||1|4|5|| | |9|
##                 |-------------------|
##                 | |9|4||2| | || | | |
##                 |-------------------|
##                 | |8|5|| | | || |2|1|
##                 +-------------------+

sudoku3 = {(1,1):9, (1,2):5, (1,7):6, (1,8):7, (2,6):7, (2,7):3,
           (2,8):1, (3,1):8, (3,4):5, (3,5):6, (3,6):1, (4,1):2,
           (4,2):3, (5,3):9, (5,7):1, (6,8):3, (6,9):7, (7,4):1,
           (7,5):4, (7,6):5, (7,9):9, (8,2):9, (8,3):4, (8,4):2,
           (9,2):8, (9,3):5, (9,8):2, (9,9):1}

## >>> psr_s3 = psr_sudoku(sudoku3)
## >>> sum(len(psr_s3.dominios[x]) for x in psr_s3.variables)
## 505
## >>> red3 = AC3(psr_s3, psr_s3.dominios)
## >>> sum(len(red3[x]) for x in psr_s3.variables)
## 214

## >>> dibuja_sudoku(psr_backtracking_AC3_MRV(psr_s3))
## +-------------------+
## |9|5|1||3|2|4||6|7|8|
## |-------------------|
## |6|4|2||8|9|7||3|1|5|
## |-------------------|
## |8|7|3||5|6|1||2|9|4|
## |-------------------|
## |-------------------|
## |2|3|7||4|1|9||8|5|6|
## |-------------------|
## |5|6|9||7|8|3||1|4|2|
## |-------------------|
## |4|1|8||6|5|2||9|3|7|
## |-------------------|
## |-------------------|
## |3|2|6||1|4|5||7|8|9|
## |-------------------|
## |1|9|4||2|7|8||5|6|3|
## |-------------------|
## |7|8|5||9|3|6||4|2|1|
## +-------------------+

## >>> psr_s3 = psr_sudoku(sudoku3)
## >>> sudoku_azar3 = crea_asignacion_inicial(psr_s3)
## >>> dibuja_sudoku(sudoku_azar3)
## +-------------------+
## |9|5|6||2|4|3||6|7|9|
## |-------------------|
## |6|9|2||6|3|7||3|1|3|
## |-------------------|
## |8|1|7||5|6|1||7|2|1|
## |-------------------|
## |-------------------|
## |2|3|4||6|9|1||3|9|8|
## |-------------------|
## |9|6|9||6|8|6||1|6|8|
## |-------------------|
## |2|5|9||6|2|7||8|3|7|
## |-------------------|
## |-------------------|
## |1|1|6||1|4|5||9|4|9|
## |-------------------|
## |6|9|4||2|2|7||2|2|7|
## |-------------------|
## |3|8|5||8|4|2||7|2|1|
## +-------------------+
## >>> restricciones_incumplidas(psr_s3, sudoku_azar3)
## {(5, 9): 3, (4, 7): 3, (1, 3): 3, (9, 1): 0, (4, 8): 1, (5, 6): 5,
##  (5, 4): 6, (2, 1): 3, (8, 9): 3, (6, 2): 1, (1, 6): 1, (9, 4): 1,
##  (5, 1): 3, (3, 7): 3, (2, 5): 3, (8, 5): 5, (5, 8): 3, (6, 7): 2,
##  (3, 3): 1, (2, 9): 2, (8, 1): 2, (4, 4): 4, (6, 3): 2, (1, 5): 2,
##  (7, 2): 3, (2, 2): 2, (8, 6): 3, (9, 7): 2, (6, 4): 4, (3, 2): 3,
##  (6, 6): 3, (7, 1): 2, (4, 5): 1, (1, 4): 1, (7, 7): 1, (3, 9): 4,
##  (2, 3): 0, (1, 9): 2, (8, 7): 4, (4, 9): 2, (9, 6): 3, (6, 5): 2,
##  (5, 5): 1, (7, 3): 2, (4, 6): 1, (7, 8): 1, (6, 1): 2, (3, 8): 2,
##  (8, 8): 5, (4, 3): 1, (9, 5): 2, (5, 2): 3, (2, 4): 5} 
## >>> selecciona_variable(psr_s3, sudoku_azar3, None)
## (5, 4)
## >>> nuevo_valor(psr_s3, sudoku_azar3, (5, 4))
## 3
## >>> sudoku_azar3[(5, 4)] = 3
## >>> restricciones_incumplidas(psr_s3, sudoku_azar3)
## {(5, 9): 3, (4, 7): 3, (1, 3): 3, (9, 1): 0, (4, 8): 1, (5, 6): 4,
##  (5, 4): 0, (2, 1): 3, (8, 9): 3, (6, 2): 1, (1, 6): 1, (9, 4): 1,
##  (5, 1): 3, (3, 7): 3, (2, 5): 3, (8, 5): 5, (5, 8): 2, (6, 7): 2,
##  (3, 3): 1, (2, 9): 2, (8, 1): 2, (4, 4): 3, (6, 3): 2, (1, 5): 2,
##  (7, 2): 3, (2, 2): 2, (8, 6): 3, (9, 7): 2, (6, 4): 3, (3, 2): 3,
##  (6, 6): 3, (7, 1): 2, (4, 5): 1, (1, 4): 1, (7, 7): 1, (3, 9): 4,
##  (2, 3): 0, (1, 9): 2, (8, 7): 4, (4, 9): 2, (9, 6): 3, (6, 5): 2,
##  (5, 5): 1, (7, 3): 2, (4, 6): 1, (7, 8): 1, (6, 1): 2, (3, 8): 2,
##  (8, 8): 5, (4, 3): 1, (9, 5): 2, (5, 2): 2, (2, 4): 4} 
